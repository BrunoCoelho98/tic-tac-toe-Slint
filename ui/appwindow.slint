import { Button, VerticalBox , GridBox} from "std-widgets.slint";


struct squareData {
    image: image,
}

export component square inherits Rectangle {
    callback clicked(bool);
    in-out property <bool> alreadyClicked: false;
    in property <image> icon;
    in-out property <bool> game_over: false;

    height: 64px;
    width: 64px;
    background: alreadyClicked ? #34CE57 : #3960D5;

    Image {
        source: icon;
        width: parent.width;
        height: parent.height;
    }

    TouchArea {
        clicked => {
            root.clicked(alreadyClicked);
        }
    }
}


export component AppWindow inherits Window {
    //tic-tac-toe slint interface
    width: 192px;
    height: 192px;

    in-out property <bool> playerTurn;
    in-out property <bool> game_over;
    callback check_if_game_over(int, bool) -> bool;

    in-out property <[squareData]> squares: [
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
        {image: @image-url("icons/empty.png"), alreadyClicked: false},
    ];


    // Create 9 instances of the square component
    for tile[i] in squares : square {
        icon: self.game_over? @image-url("icons/empty.png") : tile.image;
        x: mod(i, 3) * 64px;
        y: floor(i / 3) * 64px;
        width: 64px;
        height: 64px;


        clicked => {
            if (self.alreadyClicked == false) {
                self.icon = playerTurn? @image-url("icons/circle.png") : @image-url("icons/cross.png");
                game_over = root.check_if_game_over(i, playerTurn);
                if (game_over){
                    //reset the game
                    self.alreadyClicked = false;
                    playerTurn = false; // or set it to the initial player's turn
                } else {
                    self.alreadyClicked = true;
                    playerTurn = !playerTurn;
                
                }

            }
        }
    }
    
}